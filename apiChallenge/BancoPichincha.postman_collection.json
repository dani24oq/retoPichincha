{
	"info": {
		"_postman_id": "70b8e2aa-1c50-4952-b8a5-0a9589003369",
		"name": "Banco Pichincha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14171021"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property(\"code\", 200);\r",
							"    pm.expect(responseJson).to.have.property(\"type\", \"unknown\");\r",
							"    pm.expect(responseJson.message).to.include('logged in user');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/login?username={{login_user}}&password={{password}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": "{{login_user}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    const userId = pm.variables.get(\"id\");\r",
							"    pm.expect(responseJson).to.have.property(\"code\", 200);\r",
							"    pm.expect(responseJson).to.have.property(\"type\", \"unknown\");\r",
							"    pm.expect(responseJson.message).to.equal(String(userId));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{id}},\r\n  \"username\": \"{{user_name}}\",\r\n  \"firstName\": \"{{first_name}}\",\r\n  \"lastName\": \"{{last_name}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{new_pass}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"userStatus\": 0\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    const userId = pm.variables.get(\"id\");\r",
							"    const userName = pm.variables.get(\"user_name\");\r",
							"    const firstName = pm.variables.get(\"first_name\");\r",
							"    const lastName = pm.variables.get(\"last_name\");\r",
							"    const email = pm.variables.get(\"email\");\r",
							"    const pass = pm.variables.get(\"new_pass\");\r",
							"    const phone = pm.variables.get(\"phone\");\r",
							"    pm.expect(responseJson).to.have.property(\"id\", userId);\r",
							"    pm.expect(responseJson).to.have.property(\"username\", userName);\r",
							"    pm.expect(responseJson).to.have.property(\"firstName\", firstName);\r",
							"    pm.expect(responseJson).to.have.property(\"lastName\", lastName);\r",
							"    pm.expect(responseJson).to.have.property(\"email\", email);\r",
							"    pm.expect(responseJson).to.have.property(\"password\", pass);\r",
							"    pm.expect(responseJson).to.have.property(\"phone\", String(phone));\r",
							"    pm.expect(responseJson).to.have.property(\"userStatus\", 0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{user_name}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{user_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    const userId = pm.variables.get(\"id\")\r",
							"    pm.expect(responseJson).to.have.property(\"code\", 200);\r",
							"    pm.expect(responseJson).to.have.property(\"type\", \"unknown\");\r",
							"    pm.expect(responseJson).to.have.property(\"message\", String(userId));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{id}},\r\n  \"username\": \"{{user_name}}\",\r\n  \"firstName\": \"{{new_first_name}}\",\r\n  \"lastName\": \"{{last_name}}\",\r\n  \"email\": \"{{new_email}}\",\r\n  \"password\": \"{{new_pass}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"userStatus\": 0\r\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{user_name}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{user_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find updated user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    const userId = pm.variables.get(\"id\");\r",
							"    const userName = pm.variables.get(\"user_name\");\r",
							"    const firstName = pm.variables.get(\"new_first_name\");\r",
							"    const lastName = pm.variables.get(\"last_name\");\r",
							"    const email = pm.variables.get(\"new_email\");\r",
							"    const pass = pm.variables.get(\"new_pass\");\r",
							"    const phone = pm.variables.get(\"phone\");\r",
							"    pm.expect(responseJson).to.have.property(\"id\", userId);\r",
							"    pm.expect(responseJson).to.have.property(\"username\", userName);\r",
							"    pm.expect(responseJson).to.have.property(\"firstName\", firstName);\r",
							"    pm.expect(responseJson).to.have.property(\"lastName\", lastName);\r",
							"    pm.expect(responseJson).to.have.property(\"email\", email);\r",
							"    pm.expect(responseJson).to.have.property(\"password\", pass);\r",
							"    pm.expect(responseJson).to.have.property(\"phone\", String(phone));\r",
							"    pm.expect(responseJson).to.have.property(\"userStatus\", 0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{user_name}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{user_name}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.have.property(\"code\", 200);\r",
							"    pm.expect(responseJson).to.have.property(\"type\", \"unknown\");\r",
							"    pm.expect(responseJson).to.have.property(\"message\", 'ok');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/logout",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"logout"
					]
				}
			},
			"response": []
		}
	]
}